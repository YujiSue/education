# -*- coding: utf-8 -*-
import datetime
from IPython.display import Image, display
import cv2

def 検査画像の表示(画像データ):
  表示用データ = cv2.imencode('.jpg', 画像データ)[1].tobytes()
  display(Image(data=表示用データ))

###############　簡易版電子カルテオブジェクト　##################
class 簡易版電子カルテ:
  def __init__(self):
    self.患者ノートリスト = []
    
  def ノートの追加(self, ノート):
    self.患者ノートリスト.append(ノート)
    
  def 開く(self, ノート番号):
    if ノート番号 <= len(self.患者ノートリスト):
      self.患者ノートリスト[ノート番号-1].表示()
    else:
      print(ノート番号,'番目のノートは存在しません')
  
###############　カルテノートオブジェクト　##################
class カルテノート:
  def __init__(self):
    self.患者ID = 0
    self.患者氏名 = ''
    self.患者生年月日 = ''
    self.患者性別 = ''
    self.診療データリスト = []
    
  def 記入(self, ID, 氏名, 生年月日, 性別):
    self.患者ID = ID
    self.患者氏名 = 氏名
    self.患者生年月日 = 生年月日
    self.患者性別 = 性別
    
  def 年齢(self):
    生年月日 = self.患者生年月日.split('-')
    生年 = int(生年月日[0])
    生月 = int(生年月日[1])
    return 2021 - 生年 + (1 if 生月 < 5 else 0)
  
  def 診療データ追加(self, データ):
    self.診療データリスト.append(データ)

  def 要約(self):
    テキスト = ''
    テキスト = 'ID:'+self.患者ID+'<br/>\n氏名:'+self.患者氏名+'<br/>\n年齢:'+str(self.年齢())+'歳<br/>\n<br/>\n'
    テキスト = テキスト+'診療データ数:'+str(len(self.診療データリスト))+'<br/>\n'
    if (0 < len(self.診療データリスト)):
      for i in range(0, len(self.診療データリスト)):
        テキスト = テキスト+'> No.'+str(i+1)+':<br/>\n'+self.診療データリスト[i].データの取得()+'<br/>\n'
    return テキスト

  def 表示(self):
    #患者の基本情報
    print('============================================================')
    print('基本情報')
    print('------------------------------------------------------------')
    print(' ID\t|',self.患者ID)
    print('------------------------------------------------------------')
    print(' 氏名\t|',self.患者氏名)
    print('------------------------------------------------------------')
    print(' 生年月日\t|',self.患者生年月日, '(', self.年齢(), '歳)')
    print('------------------------------------------------------------')
    print(' 性別\t|',self.患者性別)
    print('============================================================')
    print('')
    if (0 < len(self.診療データリスト)):
      for i in range(0, len(self.診療データリスト)):
        print('************************************************************')
        print('診療データ： No. ', (i+1))
        self.診療データリスト[i].データの表示()
        print('************************************************************')

###############　診療データオブジェクト　##################
class 診療データ:
  def __init__(self):
    self.診療名 = ''
    self.診療日 = datetime.date.today()
    self.診療項目 = []
    self.データタイプ = ''
    self.診療結果 = {}
    self.医師の所見 = ''
  
  def 診療情報の記入(self, 内容, タイプ='表'):
    self.診療名 = 内容['名称']
    self.診療項目 = 内容['項目']
    self.データタイプ = タイプ

  def 診療結果の記入(self, 項目, 結果):
    self.診療結果[項目] = 結果

  def 所見の記入(self, 所見):
    self.医師の所見 = 所見
  
  def データの取得(self):
    内容 = ''
    for 項目 in self.診療項目:
      内容 = 内容 + 項目 + ':' + str(self.診療結果[項目]) + '<br/>\n'
    内容 = 内容 + '所見：' + self.医師の所見
    return 内容

  def データの表示(self):
    print('診療：', self.診療名, '\t診療日：', self.診療日.strftime('%y年%m月%d日'))
    print('------------------------------------------------------------')
    print('　診療項目\t\t結果')
    print('------------------------------------------------------------')
    if self.データタイプ == '画像':
      for 項目 in self.診療項目:
        画像データ = cv2.imread(self.診療結果[項目])
        画像データ = cv2.resize(画像データ, (256, 256))
        画像データ = cv2.cvtColor(画像データ, cv2.COLOR_BGR2RGB)
        検査画像の表示(画像データ)
    else:
      for 項目 in self.診療項目:
        print('　　', 項目, '\t', self.診療結果[項目])
      print('- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -')
    print('------------------------------------------------------------')
    print('所見：', self.医師の所見)
    print('------------------------------------------------------------')


    
